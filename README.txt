A Java applet implementing a cryptographically secure communication channel.

Selected Technical Features:

•	DHE (Ephemeral Diffie-Hellman RSA) key exchange model

    o	Ensures perfect forward secrecy

•	RSA (Public/private key cryptography) encryption model

•	Message integrity by cryptographic hashing

    o	HMAC SHA-256 hash algorithm



SecureChannel has been modeled from DHE-RSA, to ensure perfect forward secrecy. To prevent playback attacks, both the client and the server open the connection with a nonce. Each side makes a KeyExchange, seeded with the PRGen which itself is assumed to be seeded with high-quality randomness. The server signs its side of the DHE, which the client verifies to ensure the key originates from the holder of the public key it is given - whether the intended recipient is this holder requires some web of trust functionality beyond the scope of this project. As the DHE messages are intended to be sent in the clear, neither is encrypted. However, DHE ensures that any MITM observer is unable to efficiently find the PMS. The master key is then generated from the pre-master secret DHE made, the client nonce, and the server nonce. Finally, each party hashes the messages they've received concatenated with those they've sent with a cryptographic hash function seeded with the master key, and sends it to be verified. If the expected value differs from the received value, the connection is closed. This prevents any messages from being altered or reordered in flight.

Further messages are encrypted with the master key and include a nonce generated by the PRGen, and the concatenated with the hash of the entire chat history to prevent messages from being reordered or altered in flight. If at any point the client and server disagree on the order or content of exchanged messages, the connection is closed.
